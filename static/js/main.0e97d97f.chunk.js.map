{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,GCFE,I,MDEK,SAACC,GACrB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACHC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACJ,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,aENbC,G,MAAS,SAACR,GAGnB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SAEDD,EAAMI,QAAQO,KAAI,SAAAP,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCJ5CO,G,MAAW,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACtC,OACA,uBACAC,KAAK,SACLF,YAAaA,EACbZ,UAAU,SACVe,SAAUF,MCmCKG,G,wDAtCb,aAAc,IAAD,8BACX,gBAaFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXC,SAAS,GACTJ,YAAa,IAJJ,E,gEAQO,IAAD,OACjBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACK,SAASK,S,+BAM9B,IAAD,EAE0BC,KAAKP,MAA9BC,EAFD,EAECA,SAAUJ,EAFX,EAEWA,YACXW,EAAmBP,EAASQ,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYe,wBAElD,OACE,sBAAKlC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAY,YAAY,kBACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUV,QAAW2B,W,GA/BXK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0e97d97f.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\nexport const Card = (props)=>{\nreturn(\n    <div className='card-container'>\n        <img\n        alt=\"Monster\"\n         src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180` }/>\n        <h2 >{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n\n)\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport {Card} from '../card/card.component'\n import './card-list.styles.css'\nexport const CardList=(props)=>{\n\n    console.log(props);\n    return(<div className='card-list'>\n         {\n          props.monster.map(monster =><Card key={monster.id} monster ={monster}/>)\n        }\n    </div>)\n}","import React from 'react'\n\nimport './search-box.styles.css'\n\nexport const SearchBox =({placeholder,handleChange})=>{\nreturn(\n<input\ntype='search'\nplaceholder={placeholder}\nclassName='search'\nonChange={handleChange}\n/>\n)\n}","import logo from './logo.svg';\nimport React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchField :''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n    \n  }\n  handleChange =(e)=>{\n    this.setState({searchField:e.target.value})\n  }\n  render(){\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n        placeholder='search monsters'\n        handleChange={this.handleChange}\n        />\n        <CardList monster = {filteredMonsters}/ >\n        \n      </div>\n    ) \n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}